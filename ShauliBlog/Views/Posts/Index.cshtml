@using ShauliBlog.Utils;

@model IEnumerable<ShauliBlog.Models.Post>

@{
    ViewBag.Title = "Index";
}
<div id="mainContent">
    <h2>Posts Manager</h2>

    <h4><u> Search:</u></h4>
    <form asp-controller="Posts" asp-action="Index">
        <p>
            Title: @Html.TextBox("SearchString") <br/>
            Has Video: @Html.CheckBox("HasVideo") <br/>
            Has Picture: @Html.CheckBox("HasPicture") <br/>
            Has Comments: @Html.CheckBox("HasComments") <br/>
            <input type="submit" value="Filter" />
        </p>
    </form>

    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Headline)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Author)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Headline)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Author)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id }) |
                    @Html.ActionLink("Comments", "Details", "PostComments", new { Postid = item.Id }, null)
                </td>
            </tr>
        }

    </table>

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>

    @Html.ActionLink("Join all Posts with Comments by PostID", "JoinByPost")<br />
    @Html.ActionLink("Join all Posts with Comments by Author", "JoinByAuthor")<br />
    @Html.ActionLink("Group by web page", "GroupByWebpage") <br /> <br />


    <div id="graphs">
        <div id="graph1">
            <br />
            <h4><u> Posts by day:</u></h4>
            <br />

            <!-- load the d3.js library -->
            <script src="https://d3js.org/d3.v4.min.js"></script>

            <script>

            // set the dimensions and margins of the graph
            var margin = {top: 20, right: 20, bottom: 30, left: 50},
                width = 600  - margin.left - margin.right,
                height = 500 - margin.top - margin.bottom;

            // parse the date / time
            var parseTime = d3.timeParse("%d-%b-%y");

            // set the ranges
            var x = d3.scaleTime().range([0, width]);
            var y = d3.scaleLinear().range([height, 0]);

            // define the line
            var valueline = d3.line()
                .x(function(d) { return x(d.date); })
                .y(function (d) { return y(d.close); });

            // append the svg obgect to the body of the page
            // appends a 'group' element to 'svg'
            // moves the 'group' element to the top left margin
            var svg = d3.select("#graph1")
                .append("svg")
                .attr("width", 600)
                .attr("height", 500)
                .append("svg:g")
                .attr("transform", "translate(" + margin.left + "," + margin.top + ")");


            // Get the data
            //d3.csv("./Content/data.csv", function (error, data)
            d3.csv("@Url.Content("~/Content/data.csv")", function(error, data) {
              if (error) throw error;

              // format the data
              data.forEach(function(d) {
                  d.date = parseTime(d.date);
                  d.close = +d.close;
              });

              // Scale the range of the data
              x.domain(d3.extent(data, function(d) { return d.date; }));
                    y.domain([0, d3.max(data, function (d) { return d.close; })]);

              // Add the valueline path.
              svg.append("path")
                  .data([data])
                  .attr("class", "line")
                  .attr("d", valueline);

              // Add the X Axis
              svg.append("g")
                  .attr("transform", "translate(0," + height  + ")")
                  .call(d3.axisBottom(x));

              // Add the Y Axis
              svg.append("g")
                  .call(d3.axisLeft(y));

            });

            </script>

        </div>


        <div id="graph2">
            <br />
            <h4><u> Posts by month: </u></h4>
            <br />

            <script>

                var svg2 = d3.select("#graph2")
                    .append("svg")
                    .attr("width", 400)
                    .attr("height", 400).append("g"),
                    g = svg2.append("g").attr("transform", "translate(" + 400 / 2 + "," + 400 / 2 + ")");
                
                radius = (Math.min(400, 400) / 2);

            



                    var color = d3.scaleOrdinal(["#98abc5", "#8a89a6", "#7b6888", "#6b486b", "#a05d56", "#d0743c", "#ff8c00"]);

                    var pie = d3.pie()
                        .sort(null)
                        .value(function (d) { return d.count; });

                    var path = d3.arc()
                        .outerRadius(radius - 10)
                        .innerRadius(0);

                    var label = d3.arc()
                        .outerRadius(radius - 40)
                        .innerRadius(radius - 40);

                    d3.csv("@Url.Content("~/Content/data2.csv")", function (d) {
                        d.count = +d.count;
                        return d;
                    }, function (error, data) {
                        if (error) throw error;

                        var arc = g.selectAll(".arc")
                            .data(pie(data))
                            .enter().append("g")
                            .attr("class", "arc");

                        arc.append("path")
                            .attr("d", path)
                            .attr("fill", function (d) { return color(d.data.month); });

                        arc.append("text")
                            .attr("transform", function (d) { return "translate(" + label.centroid(d) + ")"; })
                            .attr("dy", "0.35em")
                            .text(function (d) { return d.data.month; });
                    });

            </script>

        </div>  
    </div>



</div>
